{"version":3,"sources":["index.tsx"],"names":["Native","size","props","Web","styles","StyleSheet","flatten","height","width","Icon","style","Platform","OS"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;;;;;AAEA,MAAMA,MAEJ,GAAG,QAAwB;AAAA,MAAvB;AAAEC,IAAAA,IAAF;AAAQ,OAAGC;AAAX,GAAuB;AAC3B;AAAA;AACE;AACA,iCAAC,uCAAD,eACMA,KADN;AAEE,MAAA,IAAI,EAAED;AAFR;AAFF;AAMD,CATD;;AAWA,MAAME,GAEJ,GAAG,SAAwB;AAAA,MAAvB;AAAEF,IAAAA,IAAF;AAAQ,OAAGC;AAAX,GAAuB;;AAC3B,QAAME,MAAM,GAAGC,wBAAWC,OAAX,CAAmB,CAChC;AACEC,IAAAA,MAAM,EAAEN,IADV;AAEEO,IAAAA,KAAK,EAAEP;AAFT,GADgC,CAAnB,CAAf;;AAOA;AAAA;AACE;AACA,iCAAC,iCAAD,eACMC,KADN;AAEE,MAAA,KAAK,EAAEE;AAFT;AAFF;AAMD,CAhBD;;AAkBA,MAAMK,IAKJ,GAAG,SAA+B;AAAA,MAA9B;AAAER,IAAAA,IAAF;AAAQS,IAAAA,KAAR;AAAe,OAAGR;AAAlB,GAA8B;AAClC,sBACE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEQ;AAAb,KACGC,sBAASC,EAAT,KAAgB,KAAhB,iBAAyB,6BAAC,GAAD,eACpBV,KADoB;AAExB,IAAA,IAAI,EAAED;AAFkB,KAD5B,EAKGU,sBAASC,EAAT,KAAgB,KAAhB,iBAAyB,6BAAC,MAAD,eACpBV,KADoB;AAExB,IAAA,IAAI,EAAED;AAFkB,KAL5B,CADF;AAYD,CAlBD;;eAoBeQ,I","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon as FontAwesomeReact } from '@fortawesome/react-fontawesome';\nimport { FontAwesomeIcon as FontAwesomeNative } from '@fortawesome/react-native-fontawesome';\nimport { IconDefinition } from '@fortawesome/fontawesome-common-types';\nimport { Platform, StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\n\nconst Native: React.FC<{\n  size: number;\n}> = ({ size, ...props }) => {\n  return (\n    // @ts-expect-error: size is passed as a param\n    <FontAwesomeNative\n      {...props}\n      size={size}\n    />);\n};\n\nconst Web: React.FC<{\n  size: number;\n}> = ({ size, ...props }) => {\n  const styles = StyleSheet.flatten([\n    {\n      height: size,\n      width: size,\n    },\n  ]);\n\n  return (\n    // @ts-expect-error: size is passed as a style\n    <FontAwesomeReact\n      {...props}\n      style={styles}\n    />);\n};\n\nconst Icon: React.FC<{\n  color: string;\n  icon: IconDefinition;\n  size: number;\n  style?: StyleProp<ViewStyle>;\n}> = ({ size, style, ...props }) => {\n  return (\n    <View style={style}>\n      {Platform.OS === 'web' && <Web\n        {...props}\n        size={size}\n      />}\n      {Platform.OS !== 'web' && <Native\n        {...props}\n        size={size}\n      />}\n    </View>\n  );\n};\n\nexport default Icon;\n"]}